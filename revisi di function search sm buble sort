#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// FINAL PROJECT ATP PHONE BOOK KELOMPOK 9

// struct contacts untuk menyimpan input nama, nomor, dan int favorite
typedef struct contacts
{
    char nama[50];
    long long int nomor;
    // int favorite digunakan untuk menuntukan apakah contact tersebut termasuk contact favorite atau bukan
    int favorite;
} contact;

//int contact_count digunakan untuk menghitung berapa contact yang telah di input
int contact_count = 0;
// line ini digunakan untuk declare structs
contact newContact[1000], temp, del;
//int del_count digunakan untuk menghitung berapa contact yang telah terhapus
int del_count = 0;

//void buffer digunakan untuk menjadi buffer antara function sebelum menuju kembali ke menu
void buffer(int X)
{
    scanf("\n%d", &X);
    if (X == 1)
    {
        system("cls");
        menu();
    }
    else
    {
        printf("Coba tekan 1 dulu pls <3\n");
        buffer(X);
    }
}

// void add_contact digunakan untuk menambahkan contact baru
void add_contact()
{
    printf("\n\n\n\t\t\tNEW CONTACT\t\t\t\n");
    printf("Nama : ");
    getchar();
    fgets(newContact[contact_count - del_count].nama, sizeof(newContact[contact_count - del_count].nama), stdin);
    newContact[contact_count - del_count].nama[strcspn(newContact[contact_count - del_count].nama, "\n")] = '\0';
    strupr(newContact[contact_count - del_count].nama);
    printf("\nNo Handphone : ");
    scanf("%lld", &newContact[contact_count - del_count].nomor);
    contact_count++;

    printf("\n\t\tTekan 1 untuk lanjut\n");
    int x = 0;
    buffer(x);
}

// void list digunakan untuk output contact yang telah di input
void list()
{
    printf("\n\n\n\t\t\tLIST\t\t\t\n");
    printf("\n%-20s %s\n", "Nama", "No Handphone");
    for (int j = 0; j < contact_count; j++)
    {
        if (newContact[j].favorite == 1)
        {
            printf("*");
        }
        
        if (newContact[j].nomor > 0)
            printf("%-20s %lld\n", newContact[j].nama, newContact[j].nomor);
    }

    printf("\n\t\tTekan 1 untuk lanjut\n");
    int x = 0;
    buffer(x);
}


//void bubble digunakan untuk sorting contact secara alphabetical A - Z dengan bubble sort
void bubble()
{
    int sort_counts = 0;
    printf("\n\n\n\t\t\tSORT\t");
    for (int i = 0; i < contact_count - 1 - del_count; i++)
    {
        for (int j = 0; j < contact_count - i - 1 - del_count; j++)
        {
            if (strcmp(newContact[j].nama, newContact[j + 1].nama) > 0)
            {
                temp = newContact[j];
                newContact[j] = newContact[j + 1];
                newContact[j + 1] = temp;
                sort_counts++;
            }
        }
    }
    printf("\nSorting telah dilakukan dengan %d steps", sort_counts);
    printf("\n%-20s %s\n", "Nama", "No Handphone");
    for (int j = 0; j < contact_count; j++)
    {
        if (newContact[j].nomor > 0)
            printf("%-20s %lld\n", newContact[j].nama, newContact[j].nomor);
    }

    printf("\n\t\tTekan 1 untuk lanjut\n");
    int x = 0;
    buffer(x);
}

//void select digunakan untuk sorting contact secara alphabetical Z - A dengan select sort
void select () {
    int sort_counts = 0;
    for (int i = 0; i < contact_count - 1 - del_count; i++) {
    int min_idx = i;
    for (int j = i + 1; j < contact_count - del_count; j++) {
      if (strcmp(newContact[j].nama, newContact[min_idx].nama) > 0)
        min_idx = j;
        sort_counts++;
    }
    temp = newContact[min_idx];
    newContact[min_idx] = newContact[i];
    newContact[i] = temp;
  }

  printf("\nSorting telah di lakukan dengan %d steps", sort_counts);
    printf("\n%-20s %s\n", "Nama", "No Handphone");
    for (int j = 0; j < contact_count; j++)
    {
        if (newContact[j].nomor > 0)
            printf("%-20s %lld\n", newContact[j].nama, newContact[j].nomor);
    }

    printf("\n\t\tTekan 1 untuk lanjut\n");
    int x = 0;
    buffer(x);
}

//void sort digunakan untuk memilih jenis sorting yang ingin di lakukan
void sort()
{
    int x = 0;
    printf("\n\n\n\t\t\tSORT\t\n");
    printf("1. Bubble Sort || A - Z\n");
    printf("2. Selection Sort || Z - A\n");
    while (x != 1 || x != 2)
    {
        printf("Tekan 1 / 2 untuk memilih ->");
        scanf("%d", &x);
            switch (x)
            {
            case 1:
                bubble ();
                break;
            case 2:
                select ();
                break;
            default:
                printf("\nMasukkan angka yang benar!\n");
                break;
            }
    }
}

// Void search digunakan untuk mencari contact yang telah di input
void search()
{
    int x;
    char f_name[50];
    printf("\n\n\n\t\t\tSEARCH\t\t\t\n");
    printf("1. Cari Nama\n");
    printf("2. Cari Nomor Handphone\n");
    printf("Tekan 1 / 2 untuk memilih ->");
    scanf("%d", &x);
    if (x == 1)
    {
        printf("Nama yang ingin dicari : ");
        getchar();
        fgets(f_name, sizeof(f_name), stdin);
        f_name[strcspn(f_name, "\n")] = '\0';
        strupr(f_name);

        printf("\n%-20s %s\n", "Nama", "No Handphone");
        for (int j = 0; j < contact_count; j++)
        {
            if (strstr(newContact[j].nama, f_name) != NULL && newContact[j].nomor > 0)
            {
                printf("%-20s %lld\n", newContact[j].nama, newContact[j].nomor);
            }
        }

        printf("\n\t\tTekan 1 untuk lanjut\n");
        int x = 0;
        buffer(x);
    }
    else if (x == 2)
{
    long long int f_number;
    printf("Nomor yang ingin dicari : ");
    scanf("%lld", &f_number);

    printf("\n%-20s %s\n", "Nama", "No Handphone");
    for (int j = 0; j < contact_count; j++)
    {
        // Mengonversi nomor telepon dan nomor yang dicari menjadi string
        char temp[20], searchNum[20];
        sprintf(temp, "%lld", newContact[j].nomor);
        sprintf(searchNum, "%lld", f_number);

        // Melakukan pencarian berdasarkan urutan digit
        if (strstr(temp, searchNum) == temp)
        {
            printf("%-20s %lld\n", newContact[j].nama, newContact[j].nomor);
        }
    }

    printf("\n\t\tTekan 1 untuk lanjut\n");
    int x = 0;
    buffer(x);
    }
}

// void delete_contact digunkan untuk menghapus contact yang telah di input
void delete_contact()
{
    int x;
    char f_name[50];
    printf("\n\n\n\t\t\tDELETE\t\t\t\n");
    printf("1. Cari Nama\n");
    printf("2. Cari Nomor Handphone\n");
    printf("Tekan 1 / 2 untuk memilih -> ");
    scanf("%d", &x);
    if (x == 1)
    {
        printf("Nama yang ingin di hapus : ");
        getchar();
        fgets(f_name, sizeof(f_name), stdin);
        f_name[strcspn(f_name, "\n")] = '\0';
        strupr(f_name);
        for (int j = 0; j < contact_count; j++)
        {
            if (strcmp(newContact[j].nama, f_name) == 0)
            {
                for (int j = j; j < contact_count; j++)
                {
                    newContact[j] = newContact[j + 1];
                }
                del_count++;

                printf("\nContact %s telah di hapus", f_name);

                printf("\n\t\tTekan 1 untuk lanjut\n");
                int x = 0;
                buffer(x);
                break;
            }
        }
        int x = 0;
        printf("Contact tidak ditemukan!\n");
        printf("Tekan 1.Menu\t\t2.Coba lagi");
        while (x != 1 || x != 2)
        {
            scanf("%d", &x);
            if (x == 1)
            {
                menu();
            }
            else if (x == 2)
            {
                search();
            }
            else
            {
                printf("\nMasukkan angka yang benar!\n");
            }
        }
    }
    else if (x == 2)
    {
        long long int f_number;
        printf("Nomor yang ingin di hapus : ");
        scanf("%lld", &f_number);
        for (int j = 0; j < contact_count; j++)
        {
            if (newContact[j].nomor == f_number)
            {
                newContact[j] = del;
                printf("\nContact %lld telah di hapus", f_number);

                printf("\n\t\tTekan 1 untuk lanjut\n");
                int x = 0;
                buffer(x);
                break;
            }
        }
        int x = 0;
        printf("Contact tidak ditemukan!\n");
        printf("Tekan 1.Menu\t\t2.Coba lagi");
        while (x != 1 || x != 2)
        {
            scanf("%d", &x);
            if (x == 1)
            {
                menu();
            }
            else if (x == 2)
            {
                search();
            }
            else
            {
                printf("\nMasukkan angka yang benar!\n");
            }
        }
    }
}

// void edit_contact digunkan untuk merubah contact yang telah di input
void edit_contact()
{
    int x;
    char f_name[50];
    printf("\n\n\n\t\t\tEDIT\t\t\t\n");
    printf("1. Cari Nama\n");
    printf("2. Cari Nomor Handphone\n");
    printf("Tekan 1 / 2 untuk memilih ->");
    scanf("%d", &x);
    if (x == 1)
    {
        printf("Nama yang ingin di ubah : ");
        getchar();
        fgets(f_name, sizeof(f_name), stdin);
        f_name[strcspn(f_name, "\n")] = '\0';
        strupr(f_name);
        for (int j = 0; j < contact_count; j++)
        {
            if (strcmp(newContact[j].nama, f_name) == 0)
            {
                printf("Nama baru : ");
                scanf("%s", newContact[j].nama);
                strupr(newContact[j].nama);
                printf("No Handphone baru : ");
                scanf("%lld", &newContact[j].nomor);

                printf("\n\t\tTekan 1 untuk lanjut\n");
                int x = 0;
                buffer(x);
                break;
            }
        }
        int x = 0;
        printf("Contact tidak ditemukan!\n");
        printf("Tekan 1.Menu\t\t2.Coba lagi");
        while (x != 1 || x != 2)
        {
            scanf("%d", &x);
            if (x == 1)
            {
                menu();
            }
            else if (x == 2)
            {
                search();
            }
            else
            {
                printf("\nMasukkan angka yang benar!\n");
            }
        }
    }
    else if (x == 2)
    {
        long long int f_number;
        printf("Nomor yang ingin di ubah : ");
        scanf("%lld", &f_number);
        for (int j = 0; j < contact_count; j++)
        {
            if (newContact[j].nomor == f_number)
            {
                printf("Nama baru : ");
                scanf("%s", newContact[j].nama);
                strupr(newContact[j].nama);
                printf("No Handphone baru : ");
                scanf("%lld", &newContact[j].nomor);

                printf("\n\t\tTekan 1 untuk lanjut\n");
                int x = 0;
                buffer(x);
                break;
            }
        }
        int x = 0;
        printf("Contact tidak ditemukan!\n");
        printf("Tekan 1.Menu\t\t2.Coba lagi");
        while (x != 1 || x != 2)
        {
            scanf("%d", &x);
            if (x == 1)
            {
                menu();
            }
            else if (x == 2)
            {
                search();
            }
            else
            {
                printf("\nMasukkan angka yang benar!\n");
            }
        }
    }
}

// Void favorite digunakan untuk menambahkan contact ke dalam list contact favorite
void favorite()
{
    int x;
    char f_name[50];
    printf("\n\n\n\t\t\tTAMBAH FAVORITE\t\t\t\n");
    printf("1. Cari Nama\n");
    printf("2. Cari Nomor Handphone\n");
    printf("Tekan 1 / 2 untuk memilih -> ");
    scanf("%d", &x);
    if (x == 1)
    {
        printf("Nama yang ingin di jadikan favorit : ");
        getchar();
        fgets(f_name, sizeof(f_name), stdin);
        f_name[strcspn(f_name, "\n")] = '\0';
        strupr(f_name);
        for (int j = 0; j < contact_count; j++)
        {
            if (strcmp(newContact[j].nama, f_name) == 0)
            {
                newContact[j].favorite = 1;
                printf("\n\t\tContact telah di jadikan favorit\n");

                printf("\n\t\tTekan 1 untuk lanjut\n");
                int x = 0;
                buffer(x);
                break;
            } 
        }
                int x = 0;
                printf("Contact tidak ditemukan!\n");
                printf("Tekan 1.Menu\t\t2.Coba lagi");
                while (x != 1 || x != 2)
                    {
                        scanf("%d", &x);
                        if (x == 1)
                        {
                            menu();
                        }
                        else if (x == 2)
                        {
                            search();
                        }
                        else
                        {
                            printf("\nMasukkan angka yang benar!\n");
                        }
                    
            }
    }
    else if (x == 2)
    {
        long long int f_number;
        printf("Nomor yang ingin di jadikan favorit : ");
        scanf("%lld", &f_number);
        for (int j = 0; j < contact_count; j++)
        {
            if (newContact[j].nomor == f_number)
            {
                newContact[j].favorite = 1;
                printf("\n\t\tContact telah di jadikan favorit\n");

                printf("\n\t\tTekan 1 untuk lanjut\n");
                int x = 0;
                buffer(x);
                break;
            } 
        }
                int x = 0;
                printf("Contact tidak ditemukan!\n");
                printf("Tekan 1.Menu\t\t2.Coba lagi");
                while (x != 1 || x != 2)
                    {
                        scanf("%d", &x);
                        if (x == 1)
                        {
                            menu();
                        }
                        else if (x == 2)
                        {
                            search();
                        }
                        else
                        {
                            printf("\nMasukkan angka yang benar!\n");
                        }
                    }
    }
    else {
        printf("\nInput tidak valid!\n");
        favorite();
    }
}

void list_favorite()
{
    printf("\n\n\n\t\t\tLIST KONTAK FAVORIT\t\t\t\n");
    printf("\n%-20s %s\n", "Nama", "No Handphone");
    
    for (int j = 0; j < contact_count; j++)
    {
        if (newContact[j].favorite == 1 && newContact[j].nomor > 0)
        {
            printf("%-20s %lld\n", newContact[j].nama, newContact[j].nomor);
        }
    }

    printf("\n\t\tTekan 1 untuk lanjut\n");
    int x = 0;
    buffer(x);
}

void menu()
{
    int X;
    //menampilkan menu dan pilihan function yang dapat dilakukan
    printf("\n\t\t\t\t\t\tMENU\t\t\t\t\n");
    printf("1. Tambah contact Baru\t\t2. List contact\t\t3. Sort contact\t\t\t4. Cari contact\n");
    printf("5. Hapus\t\t\t6. Edit\t\t\t7. Tambah Contact Favorite\t8. List Contact Favorite\n");
    //mengambil input x sebagai pilihan
    scanf("%d", &X);
    //menggunakan switch untuk memilih case yang sesuai int x
    switch (X)
    {
    // case untuk menambahkan contact baru
    case 1:
        add_contact();
        break;
    // case untuk menampilkan contact yang telah di input
    case 2:
        list();
        break;
    //case untuk mengurutkan contact yang telah di input
    case 3:
        sort();
        break;
    //case untuk mencari contact yang telah di input
    case 4:
        search();
        break;
    //case untuk menghapus contact yang telah di input
    case 5:
        delete_contact();
        break;
    //case untuk merubah contact yang telah di input
    case 6:
        edit_contact();
        break;
    //case untuk menambah contact favorite
    case 7:
        favorite();
        break;
    //case untuk print contact favorite
    case 8:
        list_favorite();
        break;
    //case untuk handle input yang tidak sesuai
    default:
        printf("Masukkan angka yang benar!\n");
        menu();
    }
}

int main()
{
    system("color a");
    //Memanggil function menu
    menu();
    return 0;
}
